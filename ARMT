*BASIC
NEW
AUTO
REM>ARM
maxcode%=500
DIM code% maxcode%-1
FOR opt%=%1000 TO %1011 STEP %11
P%=code%
L%=code%+maxcode%
[ OPT opt%
\ set up screen mode, colours
\ and define chars
ADR R1,vduset:MOV R2,#0
.loop
LDRB R0,[R1,R2]:SWI "OS_WriteC"
ADD R2,R2,#1:CMP R2,#vdusetend-vduset:BNE loop
:
\ seed random number generator
MOV R0,#1:ADR R1,rndbuf:SWI "OS_Word"
:
\ R1=B,R2=Y,R3=Z
MOV R1,#0
.mainloop
EOR R1,R1,#128
\ counter for columns along row
MOV R2,#40
.rowloop
EOR R1,R1,#128
\ get random number
BL rndz:LDRB R3,rndbuf:AND R3,R3,#1
\ set colours
MOV R0,#17:SWI "OS_WriteC"
MOV R0,#130:SUB R0,R0,R1:SWI "OS_WriteC"
MOV R0,#17:SWI "OS_WriteC"
MOV R0,R3,LSL #1:ADD R0,R0,R1:ADD R0,R0,#1:SWI "OS_WriteC"
\ print custom char
MOV R0,#241:SUB R0,R0,R3:SWI "OS_WriteC"
\ loop
SUBS R2,R2,#1:BNE rowloop
B mainloop
:
.rndz
\ R0=A,R8=X,R9=temp
LDRB R0,rndbuf:MOV R0,R0,LSL #1:TST R0,R0,LSL #24:AND R0,R0,#255:MOV R8,R0
LDRB R9,rndbuf+2:ADC R0,R0,R9:TST R0,R0,LSL #24:STRB R0,rndbuf:STRB R8,rndbuf+2
LDRB R0,rndbuf+1:MOV R8,R0
LDRB R9,rndbuf+3:ADC R0,R0,R9:STRB R0,rndbuf+1:STRB R8,rndbuf+3
MOV PC,LR
:
.vduset
EQUB 22:EQUB 1
EQUB 19:EQUB 1:EQUD 4
EQUB 19:EQUB 2:EQUD 6
EQUB 23:EQUB 240:EQUB 1:EQUB 3:EQUB 7:EQUB 15:EQUB 31:EQUB 63:EQUB 127:EQUB 255
EQUB 23:EQUB 241:EQUB 128:EQUB 192:EQUB 224:EQUB 240:EQUB 248:EQUB 252:EQUB 254:EQUB 255
.vdusetend
:
.rndbuf
EQUD 0:EQUB 0
]
NEXT
PRINT "ARM assembled at &";~code%;"+";~P%-code%
END
>*SPOOL

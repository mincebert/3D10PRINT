*BASIC
NEW
AUTO
REM>ARM
maxcode%=500
DIM code% maxcode%-1
FOR opt%=%1000 TO %1011 STEP %11
P%=code%
L%=code%+maxcode%
[ OPT opt%
\ seed random number generator
MOV R0,#1:ADR R1,rndbuf:SWI "OS_Word"
LDRB R4,rndbuf:LDRB R5,rndbuf+1:LDRB R6,rndbuf+2:LDRB R7,rndbuf+3
:
\ set up screen mode, colours
\ and define chars
ADR R1,vduset:ADR R2,vdusetend
.loop
LDRB R0,[R1],#1:SWI "OS_WriteC"
CMP R1,R2:BNE loop
:
\ R1=B,R2=Y,R3=Z
MOV R1,#0
.mainloop
EORNE R1,R1,#128
\ counter for columns along row
MOVEQ R2,#40
\ get random number
BL rndz:AND R3,R4,#1
\ set colours
MOV R0,#17:SWI "OS_WriteC"
RSB R0,R1,#130:SWI "OS_WriteC"
MOV R0,#17:SWI "OS_WriteC"
ADD R0,R1,R3,LSL #1:ADD R0,R0,#1:SWI "OS_WriteC"
\ print custom char
RSB R0,R3,#241:SWI "OS_WriteC"
\ loop
SUBS R2,R2,#1
B mainloop
:
.rndz
\ R4-7={rndbuf+0-3},R8=X
MOV R4,R4,LSL #1:TST R4,R4,LSL #24:AND R4,R4,#255:MOV R8,R4
ADCS R4,R4,R6:TST R4,R4,LSL #24:AND R4,R4,#255:MOV R6,R8
MOV R8,R5
ADC R5,R5,R7:AND R5,R5,#255:MOV R7,R8
MOV PC,LR
:
.vduset
EQUB 22:EQUB 1
EQUB 19:EQUB 1:EQUD 4
EQUB 19:EQUB 2:EQUD 6
EQUB 23:EQUB 240:EQUB 1:EQUB 3:EQUB 7:EQUB 15:EQUB 31:EQUB 63:EQUB 127:EQUB 255
EQUB 23:EQUB 241:EQUB 128:EQUB 192:EQUB 224:EQUB 240:EQUB 248:EQUB 252:EQUB 254:EQUB 255
.vdusetend
:
.rndbuf
EQUD 0:EQUB 0
]
NEXT
PRINT "ARM assembled at &";~code%;"+";~P%-code%
END
>*SPOOL
